{
  "name": "Nháº­n career url - Fixed",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "441864de-e1c2-4b17-b37c-3a83cf2ef09d"
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [380, 1580],
      "id": "Webhook2",
      "name": "Webhook2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://crawler-ai.fly.dev/api/v1/crawl_and_extract_contact_info",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $json.body.url_career }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [680, 1580],
      "id": "ScrapeCareerPage",
      "name": "Scrape Career Page"
    },
    {
      "parameters": {
        "jsCode": "// Extract company_id from webhook and check initial result\nconst company_id = $('Webhook2').item.json.body.company_id || 'default_company';\nconst career_page_url = $('Webhook2').item.json.body.url_career;\nconst result = $input.first().json;\n\nif (result.success && result.total_jobs_found > 0) {\n  // Jobs found directly - process them\n  const jobs = result.jobs || [];\n  return jobs.map(job => ({\n    json: {\n      job_name: job.job_name || job.title || 'Unknown Job',\n      job_link: job.job_link || job.url || '',\n      job_description: job.job_description || job.description || '',\n      job_role: job.job_role || job.title || 'Unknown Role',\n      job_type: job.job_type || 'Full-time',\n      company_id: company_id,\n      source_url: career_page_url,\n      extraction_method: 'direct_crawl'\n    }\n  }));\n} else {\n  // No jobs found directly - need to crawl child links\n  const career_pages = result.career_pages || [];\n  if (!Array.isArray(career_pages) || career_pages.length === 0) {\n    return [{\n      json: {\n        error: 'No career pages found',\n        source_url: career_page_url,\n        company_id: company_id\n      }\n    }];\n  }\n  \n  return career_pages.map(url => ({\n    json: {\n      career_page: url,\n      source_url: career_page_url,\n      company_id: company_id\n    }\n  }));\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [880, 1580],
      "id": "CheckInitialResult",
      "name": "Check Initial Result"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.job_name }}",
              "operation": "exists"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1080, 1580],
      "id": "HasDirectJobs",
      "name": "Has Direct Jobs?"
    },
    {
      "parameters": {
        "batchSize": 1
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [1280, 1700],
      "id": "LoopCareerPages",
      "name": "Loop Career Pages",
      "executeOnce": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://crawler-ai.fly.dev/api/v1/crawl_child_links",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "career_page_url",
              "value": "={{ $json.career_page }}"
            },
            {
              "name": "max_links",
              "value": "15"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1480, 1700],
      "id": "ScrapeCareerContent",
      "name": "Scrape Career HTML"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.workflow_data.has_job_links }}",
              "operation": "equal",
              "value2": true
            }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1680, 1700],
      "id": "HasJobLinks",
      "name": "Has Job Links?"
    },
    {
      "parameters": {
        "batchSize": 1
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [1880, 1580],
      "id": "LoopJobLinks",
      "name": "Loop Job Links",
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "responseFormat": "string"
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [2080, 1580],
      "id": "GetJobHTML",
      "name": "Get Job HTML"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "You are a job data extraction AI. Analyze the page content and return either:\n{\n  \"hasJob\": false\n}\nor if job is found:\n{\n  \"hasJob\": true,\n  \"job_name\": \"...\",\n  \"job_link\": \"...\",\n  \"job_description\": \"...\",\n  \"job_role\": \"...\",\n  \"job_type\": \"...\"\n}\nReturn ONLY the JSON object.",
        "hasOutputParser": true
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [2280, 1580],
      "id": "AIExtractJob",
      "name": "AI Check & Extract"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.hasJob }}",
              "operation": "equal",
              "value2": true
            }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [2480, 1580],
      "id": "IfHasJob",
      "name": "Job Found?"
    },
    {
      "parameters": {
        "jsCode": "// Add company_id to job data\nconst job_data = $input.first().json;\nconst company_id = $('Loop Career Pages').item.json.company_id;\n\nreturn {\n  json: {\n    ...job_data,\n    company_id: company_id,\n    source_url: $('Loop Career Pages').item.json.source_url\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2680, 1520],
      "id": "AddCompanyId",
      "name": "Add Company ID"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api-55blff7khq-as.a.run.app/api/v1/companies/crawl/jobs",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            { "name": "job_name", "value": "={{ $json.job_name }}" },
            { "name": "job_type", "value": "={{ $json.job_type }}" },
            { "name": "job_role", "value": "={{ $json.job_role }}" },
            { "name": "job_description", "value": "={{ $json.job_description }}" },
            { "name": "company_id", "value": "={{ $json.company_id }}" },
            { "name": "job_link", "value": "={{ $json.job_link }}" }
          ]
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2880, 1520],
      "id": "SaveJob",
      "name": "Save Job"
    },
    {
      "parameters": {
        "jsCode": "// No job links found\nreturn {\n  json: {\n    error: 'No job links found in career page',\n    source_url: $('Loop Career Pages').item.json.source_url,\n    company_id: $('Loop Career Pages').item.json.company_id\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1880, 1820],
      "id": "NoJobLinks",
      "name": "No Job Links"
    }
  ],
  "connections": {
    "Webhook2": { "main": [[{"node": "Scrape Career Page","type": "main","index": 0}]] },
    "Scrape Career Page": { "main": [[{"node": "Check Initial Result","type": "main","index": 0}]] },
    "Check Initial Result": { "main": [[{"node": "Has Direct Jobs?","type": "main","index": 0}]] },
    "Has Direct Jobs?": {
      "main": [[{"node": "Save Job","type": "main","index": 0}], [{"node": "Loop Career Pages","type": "main","index": 0}]]
    },
    "Loop Career Pages": { "main": [[{"node": "Scrape Career HTML","type": "main","index": 0}]] },
    "Scrape Career HTML": { "main": [[{"node": "Has Job Links?","type": "main","index": 0}]] },
    "Has Job Links?": {
      "main": [[{"node": "Loop Job Links","type": "main","index": 0}], [{"node": "No Job Links","type": "main","index": 0}]]
    },
    "Loop Job Links": { "main": [[{"node": "Get Job HTML","type": "main","index": 0}]] },
    "Get Job HTML": { "main": [[{"node": "AI Check & Extract","type": "main","index": 0}]] },
    "AI Check & Extract": { "main": [[{"node": "Job Found?","type": "main","index": 0}]] },
    "Job Found?": {
      "main": [[{"node": "Add Company ID","type": "main","index": 0}], []]
    },
    "Add Company ID": { "main": [[{"node": "Save Job","type": "main","index": 0}]] }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  }
} 